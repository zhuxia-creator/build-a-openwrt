#
# Copyright (c) 2019-2020 Xavier <https://zxavier.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/zhangXavier/openwrt-Actions/
# Description: Build OpenWrt using GitHub Actions
#

name: Test SCP

on:
  repository_dispatch:
    types: [test]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      scp:
        description: 'SCP Files'
        required: false
        default: 'false'
  push:
    branches:
      - master

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: devices/rpi3-64/feeds.conf.default
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update && Install feeds
      run: |
        cd openwrt
        sed -i 's/^#\(.*helloworld\)/\1/' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    # - name: Compile the firmware
    #   id: compile
    #   run: |
    #     cd openwrt
    #     echo -e "$(nproc) thread compile"
    #     make -j$(nproc) || make -j1 || make -j1 V=s
    #     echo "::set-output name=status::success"
    #     grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
    #     [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
    #     echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT
    
    - name: SCP Files
      id: scp
      if: (github.event.inputs.scp == 'true' && github.event.inputs.scp  != 'false') || contains(github.event.action, 'scp')
      run: |
        tar -cvfz rpi3-64.tar.gz `ls -A`
        echo "${{ secrets.SSH_KEY }}" > key
        chmod 400 key
        scp -i key -o "StrictHostKeyChecking no" -P ${{ secrets.PORT }} rpi3-64.tar.gz ${{ secrets.USER }}@${{ secrets.HOST }}:~/code/
        rm key
